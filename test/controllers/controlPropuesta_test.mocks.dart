// Mocks generated by Mockito 5.4.1 from annotations
// in pegi/test/controllers/controlPropuesta_test.dart.
// Do not manually edit this file.

// @dart=2.19

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:firebase_storage/firebase_storage.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:pegi/data/services/peticionesPropuesta.dart' as _i3;
import 'package:pegi/domain/models/propuesta.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeFirebaseStorage_0 extends _i1.SmartFake
    implements _i2.FirebaseStorage {
  _FakeFirebaseStorage_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PeticionesPropuesta].
///
/// See the documentation for Mockito's code generation for more information.
class MockPeticionesPropuesta extends _i1.Mock
    implements _i3.PeticionesPropuesta {
  MockPeticionesPropuesta() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.FirebaseStorage get storage => (super.noSuchMethod(
        Invocation.getter(#storage),
        returnValue: _FakeFirebaseStorage_0(
          this,
          Invocation.getter(#storage),
        ),
      ) as _i2.FirebaseStorage);
  @override
  set uploadTask(_i2.UploadTask? _uploadTask) => super.noSuchMethod(
        Invocation.setter(
          #uploadTask,
          _uploadTask,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i4.Future<void> crearPropuesta(
    Map<String, dynamic>? propuesta,
    String? file,
    String? pickedFileextencion,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #crearPropuesta,
          [
            propuesta,
            file,
            pickedFileextencion,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<dynamic> uploadFile(
    String? file,
    dynamic idPropuesta,
    _i2.UploadTask? uploadTask,
    String? pickedFileextencion,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #uploadFile,
          [
            file,
            idPropuesta,
            uploadTask,
            pickedFileextencion,
          ],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<List<_i5.Propuesta>> consultarTodasPropuestas() =>
      (super.noSuchMethod(
        Invocation.method(
          #consultarTodasPropuestas,
          [],
        ),
        returnValue: _i4.Future<List<_i5.Propuesta>>.value(<_i5.Propuesta>[]),
      ) as _i4.Future<List<_i5.Propuesta>>);
  @override
  _i4.Future<List<_i5.Propuesta>> consultarPropuestas(dynamic email) =>
      (super.noSuchMethod(
        Invocation.method(
          #consultarPropuestas,
          [email],
        ),
        returnValue: _i4.Future<List<_i5.Propuesta>>.value(<_i5.Propuesta>[]),
      ) as _i4.Future<List<_i5.Propuesta>>);
  @override
  _i4.Future<List<_i5.Propuesta>> consultarPropuestaDocente(dynamic docente) =>
      (super.noSuchMethod(
        Invocation.method(
          #consultarPropuestaDocente,
          [docente],
        ),
        returnValue: _i4.Future<List<_i5.Propuesta>>.value(<_i5.Propuesta>[]),
      ) as _i4.Future<List<_i5.Propuesta>>);
  @override
  _i4.Future<void> modificarPropuesta(Map<String, dynamic>? propuesta) =>
      (super.noSuchMethod(
        Invocation.method(
          #modificarPropuesta,
          [propuesta],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> asignarEvaluadorPropuesta(Map<String, dynamic>? propuesta) =>
      (super.noSuchMethod(
        Invocation.method(
          #asignarEvaluadorPropuesta,
          [propuesta],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<dynamic> contadorPropuesta(
    dynamic id,
    String? estado,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #contadorPropuesta,
          [
            id,
            estado,
          ],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> contadorProp(dynamic id) => (super.noSuchMethod(
        Invocation.method(
          #contadorProp,
          [id],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> contadorPropAdmin() => (super.noSuchMethod(
        Invocation.method(
          #contadorPropAdmin,
          [],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> contadorPropAdm() => (super.noSuchMethod(
        Invocation.method(
          #contadorPropAdm,
          [],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<void> eliminarPropuesta(String? idPropuesta) =>
      (super.noSuchMethod(
        Invocation.method(
          #eliminarPropuesta,
          [idPropuesta],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<dynamic> coPropEst(dynamic email) => (super.noSuchMethod(
        Invocation.method(
          #coPropEst,
          [email],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> conPropE(dynamic email) => (super.noSuchMethod(
        Invocation.method(
          #conPropE,
          [email],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> conPropuEst(
    dynamic email,
    String? estado,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #conPropuEst,
          [
            email,
            estado,
          ],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
}
